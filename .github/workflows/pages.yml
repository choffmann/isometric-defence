# Simple workflow for deploying static content to GitHub Pages
name: Deploy  to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  elm-format_validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v2

    - run: yarn --frozen-lockfile

    - name: Add elm tools to PATH
      run: yarn global bin >> $GITHUB_PATH

    - name: Run elm-format
      run: elm-format --validate src/ | jq 'map("::error file=" + .path + "::" + .message) | length > 0 and error("\n" + join("\n"))'

  elm-review_lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v2

    - name: Sparse-Checkout review repository with script
      run: ./.github/elm-review-pltp.sh

    - run: yarn --frozen-lockfile

    - name: Add elm tools to PATH
      run: yarn global bin >> $GITHUB_PATH

    - name: Run elm-review
      uses: sparksp/elm-review-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        elm_review: elm-review
        
  publish-elm-package:
    needs: [elm-review_lint, elm-format_validate]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 15
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v1
        id: elm-cache
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm--home-${{ hashFiles('**/elm.json') }}
      - run: npm ci
      - run: npx --no-install elm make --output /dev/null && cd examples && npx --no-install elm make src/*.elm --output /dev/null && cd ..
      - uses: dillonkearns/elm-publish-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-elm: ./node_modules/.bin/elm
          
  deploy:
    needs: [publish-elm-package]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Deploy elm.js
        run: elm make .\src\Main.elm --output=public\elm.js
      
      - name: Setup Pages
        uses: actions/configure-pages@v2
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './public'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
